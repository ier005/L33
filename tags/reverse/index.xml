<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>reverse on L33'</title><link>https://blog.usec.cc/tags/reverse/</link><description>Recent content in reverse on L33'</description><generator>Hugo -- gohugo.io</generator><language>zh-Hans</language><lastBuildDate>Fri, 03 Nov 2017 00:00:00 +0800</lastBuildDate><atom:link href="https://blog.usec.cc/tags/reverse/index.xml" rel="self" type="application/rss+xml"/><item><title>逆向工程基础</title><link>https://blog.usec.cc/posts/security/reverse/reverse-basic/</link><pubDate>Fri, 03 Nov 2017 00:00:00 +0800</pubDate><guid>https://blog.usec.cc/posts/security/reverse/reverse-basic/</guid><description>文章内容参考来源：CTF-All-In-One 从源代码到可执行文件 以下面简单代码为例： //hello.c #include &amp;lt;stdio.h&amp;gt; void main(int argc, char **argv) { printf(&amp;#34;hello world\n&amp;#34;); } GCC在编译源码时，会直接生成一个可执行文件，但实际上这一过程可以具体分为四个步骤：预处理（Preprocessing）、编译（Compilation）、汇编（Assem</description></item></channel></rss>